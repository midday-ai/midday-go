// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/midday-ai/midday-go/models/components"
)

type CreateCustomerTagRequest struct {
	// Unique identifier of the tag
	ID string `json:"id"`
	// Display name of the tag
	Name string `json:"name"`
}

func (o *CreateCustomerTagRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateCustomerTagRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type CreateCustomerRequest struct {
	// Unique identifier of the customer. Required for updates, omit for new customers
	ID *string `json:"id,omitempty"`
	// Name of the customer or organization
	Name string `json:"name"`
	// Primary email address of the customer
	Email string `json:"email"`
	// Country name where the customer is located
	Country *string `json:"country,omitempty"`
	// First line of the customer's address
	AddressLine1 *string `json:"addressLine1,omitempty"`
	// Second line of the customer's address (suite, apartment, etc.)
	AddressLine2 *string `json:"addressLine2,omitempty"`
	// City where the customer is located
	City *string `json:"city,omitempty"`
	// State or province where the customer is located
	State *string `json:"state,omitempty"`
	// ZIP or postal code of the customer's address
	Zip *string `json:"zip,omitempty"`
	// Primary phone number of the customer
	Phone *string `json:"phone,omitempty"`
	// Website URL of the customer
	Website *string `json:"website,omitempty"`
	// Internal notes about the customer for team reference
	Note *string `json:"note,omitempty"`
	// VAT (Value Added Tax) number of the customer
	VatNumber *string `json:"vatNumber,omitempty"`
	// Country code in ISO 3166-1 alpha-2 format
	CountryCode *string `json:"countryCode,omitempty"`
	// Primary contact person's name at the customer organization
	Contact *string `json:"contact,omitempty"`
	// Array of tags to associate with the customer for categorization
	Tags []CreateCustomerTagRequest `json:"tags,omitempty"`
}

func (o *CreateCustomerRequest) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateCustomerRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateCustomerRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *CreateCustomerRequest) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *CreateCustomerRequest) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *CreateCustomerRequest) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *CreateCustomerRequest) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *CreateCustomerRequest) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *CreateCustomerRequest) GetZip() *string {
	if o == nil {
		return nil
	}
	return o.Zip
}

func (o *CreateCustomerRequest) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *CreateCustomerRequest) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *CreateCustomerRequest) GetNote() *string {
	if o == nil {
		return nil
	}
	return o.Note
}

func (o *CreateCustomerRequest) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *CreateCustomerRequest) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *CreateCustomerRequest) GetContact() *string {
	if o == nil {
		return nil
	}
	return o.Contact
}

func (o *CreateCustomerRequest) GetTags() []CreateCustomerTagRequest {
	if o == nil {
		return nil
	}
	return o.Tags
}

type CreateCustomerTagResponse struct {
	// Unique identifier of the tag
	ID string `json:"id"`
	// Display name of the tag
	Name string `json:"name"`
}

func (o *CreateCustomerTagResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateCustomerTagResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// CreateCustomerResponseBody - Customer created
type CreateCustomerResponseBody struct {
	// Unique identifier of the customer
	ID string `json:"id"`
	// Name of the customer or organization
	Name string `json:"name"`
	// Primary email address of the customer
	Email string `json:"email"`
	// Primary phone number of the customer
	Phone *string `json:"phone"`
	// Website URL of the customer
	Website *string `json:"website"`
	// Date and time when the customer was created in ISO 8601 format
	CreatedAt string `json:"createdAt"`
	// Country name where the customer is located
	Country *string `json:"country"`
	// First line of the customer's address
	AddressLine1 *string `json:"addressLine1"`
	// Second line of the customer's address (suite, apartment, etc.)
	AddressLine2 *string `json:"addressLine2"`
	// City where the customer is located
	City *string `json:"city"`
	// State or province where the customer is located
	State *string `json:"state"`
	// ZIP or postal code of the customer's address
	Zip *string `json:"zip"`
	// Internal notes about the customer for team reference
	Note *string `json:"note"`
	// VAT (Value Added Tax) number of the customer
	VatNumber *string `json:"vatNumber"`
	// Country code in ISO 3166-1 alpha-2 format
	CountryCode *string `json:"countryCode"`
	// Unique token for the customer (used for internal identification)
	Token string `json:"token"`
	// Primary contact person's name at the customer organization
	Contact *string `json:"contact"`
	// Total number of invoices created for this customer
	InvoiceCount float64 `json:"invoiceCount"`
	// Total number of projects associated with this customer
	ProjectCount float64 `json:"projectCount"`
	// Array of tags associated with the customer for categorization
	Tags []CreateCustomerTagResponse `json:"tags"`
}

func (o *CreateCustomerResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateCustomerResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateCustomerResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *CreateCustomerResponseBody) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *CreateCustomerResponseBody) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *CreateCustomerResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *CreateCustomerResponseBody) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *CreateCustomerResponseBody) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *CreateCustomerResponseBody) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *CreateCustomerResponseBody) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *CreateCustomerResponseBody) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *CreateCustomerResponseBody) GetZip() *string {
	if o == nil {
		return nil
	}
	return o.Zip
}

func (o *CreateCustomerResponseBody) GetNote() *string {
	if o == nil {
		return nil
	}
	return o.Note
}

func (o *CreateCustomerResponseBody) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *CreateCustomerResponseBody) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *CreateCustomerResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *CreateCustomerResponseBody) GetContact() *string {
	if o == nil {
		return nil
	}
	return o.Contact
}

func (o *CreateCustomerResponseBody) GetInvoiceCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.InvoiceCount
}

func (o *CreateCustomerResponseBody) GetProjectCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.ProjectCount
}

func (o *CreateCustomerResponseBody) GetTags() []CreateCustomerTagResponse {
	if o == nil {
		return []CreateCustomerTagResponse{}
	}
	return o.Tags
}

type CreateCustomerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Customer created
	Object *CreateCustomerResponseBody
}

func (o *CreateCustomerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateCustomerResponse) GetObject() *CreateCustomerResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

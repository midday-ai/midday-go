// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/midday-ai/midday-go/internal/utils"
	"github.com/midday-ai/midday-go/models/components"
)

type SearchRequest struct {
	SearchTerm         *string  `queryParam:"style=form,explode=true,name=searchTerm"`
	Language           *string  `queryParam:"style=form,explode=true,name=language"`
	Limit              *float64 `default:"30" queryParam:"style=form,explode=true,name=limit"`
	ItemsPerTableLimit *float64 `default:"5" queryParam:"style=form,explode=true,name=itemsPerTableLimit"`
	RelevanceThreshold *float64 `default:"0.01" queryParam:"style=form,explode=true,name=relevanceThreshold"`
}

func (s SearchRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchRequest) GetSearchTerm() *string {
	if o == nil {
		return nil
	}
	return o.SearchTerm
}

func (o *SearchRequest) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *SearchRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SearchRequest) GetItemsPerTableLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.ItemsPerTableLimit
}

func (o *SearchRequest) GetRelevanceThreshold() *float64 {
	if o == nil {
		return nil
	}
	return o.RelevanceThreshold
}

type SearchResponseBody struct {
	// Unique identifier for the search result item.
	ID string `json:"id"`
	// Type of the entity returned (e.g., invoice, customer, transaction).
	Type string `json:"type"`
	// Relevance score for the search result.
	Relevance float64 `json:"relevance"`
	// ISO 8601 timestamp when the entity was created.
	CreatedAt string `json:"created_at"`
	// Additional data for the search result, structure depends on the type.
	Data any `json:"data,omitempty"`
}

func (o *SearchResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SearchResponseBody) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *SearchResponseBody) GetRelevance() float64 {
	if o == nil {
		return 0.0
	}
	return o.Relevance
}

func (o *SearchResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *SearchResponseBody) GetData() any {
	if o == nil {
		return nil
	}
	return o.Data
}

type SearchResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Search results.
	ResponseBodies []SearchResponseBody
}

func (o *SearchResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SearchResponse) GetResponseBodies() []SearchResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}

// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/midday-ai/midday-go/models/components"
)

type ListTrackerEntriesRequest struct {
	From      string  `queryParam:"style=form,explode=true,name=from"`
	To        string  `queryParam:"style=form,explode=true,name=to"`
	ProjectID *string `queryParam:"style=form,explode=true,name=projectId"`
}

func (o *ListTrackerEntriesRequest) GetFrom() string {
	if o == nil {
		return ""
	}
	return o.From
}

func (o *ListTrackerEntriesRequest) GetTo() string {
	if o == nil {
		return ""
	}
	return o.To
}

func (o *ListTrackerEntriesRequest) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

// ListTrackerEntriesMeta - Metadata about the tracker entries response including totals and date range
type ListTrackerEntriesMeta struct {
	// Total duration of all tracker entries in the response in seconds
	TotalDuration float64 `json:"totalDuration"`
	// Total monetary amount for all tracker entries in the response
	TotalAmount float64 `json:"totalAmount"`
	// Start date of the queried range in YYYY-MM-DD format
	From string `json:"from"`
	// End date of the queried range in YYYY-MM-DD format
	To string `json:"to"`
}

func (o *ListTrackerEntriesMeta) GetTotalDuration() float64 {
	if o == nil {
		return 0.0
	}
	return o.TotalDuration
}

func (o *ListTrackerEntriesMeta) GetTotalAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.TotalAmount
}

func (o *ListTrackerEntriesMeta) GetFrom() string {
	if o == nil {
		return ""
	}
	return o.From
}

func (o *ListTrackerEntriesMeta) GetTo() string {
	if o == nil {
		return ""
	}
	return o.To
}

// User information for the person who created this tracker entry
type User struct {
	// Unique identifier of the user
	ID string `json:"id"`
	// Full name of the user
	FullName string `json:"fullName"`
	// URL to the user's avatar image
	AvatarURL string `json:"avatarUrl"`
}

func (o *User) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *User) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *User) GetAvatarURL() string {
	if o == nil {
		return ""
	}
	return o.AvatarURL
}

// ListTrackerEntriesCustomer - Customer information associated with the project
type ListTrackerEntriesCustomer struct {
	// Unique identifier of the customer
	ID string `json:"id"`
	// Name of the customer or organization
	Name string `json:"name"`
}

func (o *ListTrackerEntriesCustomer) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListTrackerEntriesCustomer) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// Project information associated with this tracker entry
type Project struct {
	// Unique identifier of the project
	ID string `json:"id"`
	// Date and time when the project was created in ISO 8601 format
	CreatedAt string `json:"createdAt"`
	// Default hourly rate for the project
	Rate float64 `json:"rate"`
	// Currency code for the project rate in ISO 4217 format
	Currency string `json:"currency"`
	// Current status of the project
	Status string `json:"status"`
	// Description of the project
	Description string `json:"description"`
	// Name of the project
	Name string `json:"name"`
	// Whether the project is billable to the customer
	Billable bool `json:"billable"`
	// Estimated total hours for the project
	Estimate float64 `json:"estimate"`
	// Customer information associated with the project
	Customer ListTrackerEntriesCustomer `json:"customer"`
}

func (o *Project) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Project) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *Project) GetRate() float64 {
	if o == nil {
		return 0.0
	}
	return o.Rate
}

func (o *Project) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *Project) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *Project) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *Project) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Project) GetBillable() bool {
	if o == nil {
		return false
	}
	return o.Billable
}

func (o *Project) GetEstimate() float64 {
	if o == nil {
		return 0.0
	}
	return o.Estimate
}

func (o *Project) GetCustomer() ListTrackerEntriesCustomer {
	if o == nil {
		return ListTrackerEntriesCustomer{}
	}
	return o.Customer
}

type Result struct {
	// Unique identifier of the tracker entry
	ID string `json:"id"`
	// Date and time when the tracker entry was created in ISO 8601 format
	CreatedAt string `json:"createdAt"`
	// Duration of the tracker entry in seconds
	Duration float64 `json:"duration"`
	// Start time of the tracker entry in ISO 8601 format
	Start string `json:"start"`
	// Stop time of the tracker entry in ISO 8601 format
	Stop string `json:"stop"`
	// Unique identifier of the team that owns this tracker entry
	TeamID string `json:"teamId"`
	// Description or notes for the tracker entry
	Description *string `json:"description"`
	// Hourly rate applied to this tracker entry
	Rate *float64 `json:"rate"`
	// Currency code for the rate in ISO 4217 format
	Currency *string `json:"currency"`
	// Whether this tracker entry has been billed to the customer
	Billed bool `json:"billed"`
	// Date of the tracker entry in YYYY-MM-DD format
	Date string `json:"date"`
	// User information for the person who created this tracker entry
	User User `json:"user"`
	// Project information associated with this tracker entry
	Project Project `json:"project"`
}

func (o *Result) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Result) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *Result) GetDuration() float64 {
	if o == nil {
		return 0.0
	}
	return o.Duration
}

func (o *Result) GetStart() string {
	if o == nil {
		return ""
	}
	return o.Start
}

func (o *Result) GetStop() string {
	if o == nil {
		return ""
	}
	return o.Stop
}

func (o *Result) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *Result) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Result) GetRate() *float64 {
	if o == nil {
		return nil
	}
	return o.Rate
}

func (o *Result) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *Result) GetBilled() bool {
	if o == nil {
		return false
	}
	return o.Billed
}

func (o *Result) GetDate() string {
	if o == nil {
		return ""
	}
	return o.Date
}

func (o *Result) GetUser() User {
	if o == nil {
		return User{}
	}
	return o.User
}

func (o *Result) GetProject() Project {
	if o == nil {
		return Project{}
	}
	return o.Project
}

// ListTrackerEntriesResponseBody - List all tracker entries for the authenticated team.
type ListTrackerEntriesResponseBody struct {
	// Metadata about the tracker entries response including totals and date range
	Meta ListTrackerEntriesMeta `json:"meta"`
	// Tracker entries grouped by date, where each key is a date in YYYY-MM-DD format and the value is an array of tracker entries for that date
	Result map[string][]Result `json:"result"`
}

func (o *ListTrackerEntriesResponseBody) GetMeta() ListTrackerEntriesMeta {
	if o == nil {
		return ListTrackerEntriesMeta{}
	}
	return o.Meta
}

func (o *ListTrackerEntriesResponseBody) GetResult() map[string][]Result {
	if o == nil {
		return map[string][]Result{}
	}
	return o.Result
}

type ListTrackerEntriesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List all tracker entries for the authenticated team.
	Object *ListTrackerEntriesResponseBody
}

func (o *ListTrackerEntriesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListTrackerEntriesResponse) GetObject() *ListTrackerEntriesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

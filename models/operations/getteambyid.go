// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/midday-ai/midday-go/models/components"
)

type GetTeamByIDRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetTeamByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetTeamByIDPlan - Current subscription plan of the team
type GetTeamByIDPlan string

const (
	GetTeamByIDPlanTrial   GetTeamByIDPlan = "trial"
	GetTeamByIDPlanStarter GetTeamByIDPlan = "starter"
	GetTeamByIDPlanPro     GetTeamByIDPlan = "pro"
)

func (e GetTeamByIDPlan) ToPointer() *GetTeamByIDPlan {
	return &e
}
func (e *GetTeamByIDPlan) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "trial":
		fallthrough
	case "starter":
		fallthrough
	case "pro":
		*e = GetTeamByIDPlan(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTeamByIDPlan: %v", v)
	}
}

// GetTeamByIDResponseBody - Team details
type GetTeamByIDResponseBody struct {
	// Unique identifier of the team
	ID string `json:"id"`
	// Name of the team or organization
	Name string `json:"name"`
	// URL to the team's logo image
	LogoURL *string `json:"logoUrl"`
	// Current subscription plan of the team
	Plan GetTeamByIDPlan `json:"plan"`
}

func (o *GetTeamByIDResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetTeamByIDResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetTeamByIDResponseBody) GetLogoURL() *string {
	if o == nil {
		return nil
	}
	return o.LogoURL
}

func (o *GetTeamByIDResponseBody) GetPlan() GetTeamByIDPlan {
	if o == nil {
		return GetTeamByIDPlan("")
	}
	return o.Plan
}

type GetTeamByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Team details
	Object *GetTeamByIDResponseBody
}

func (o *GetTeamByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetTeamByIDResponse) GetObject() *GetTeamByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/midday-ai/midday-go/models/components"
)

// ListTrackerProjectsStatus - Filter projects by status
type ListTrackerProjectsStatus string

const (
	ListTrackerProjectsStatusInProgress ListTrackerProjectsStatus = "in_progress"
	ListTrackerProjectsStatusCompleted  ListTrackerProjectsStatus = "completed"
)

func (e ListTrackerProjectsStatus) ToPointer() *ListTrackerProjectsStatus {
	return &e
}
func (e *ListTrackerProjectsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_progress":
		fallthrough
	case "completed":
		*e = ListTrackerProjectsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTrackerProjectsStatus: %v", v)
	}
}

type ListTrackerProjectsRequest struct {
	Cursor   *string  `queryParam:"style=form,explode=true,name=cursor"`
	PageSize *float64 `queryParam:"style=form,explode=true,name=pageSize"`
	Q        *string  `queryParam:"style=form,explode=true,name=q"`
	Start    *string  `queryParam:"style=form,explode=true,name=start"`
	End      *string  `queryParam:"style=form,explode=true,name=end"`
	// Filter projects by status
	Status    *ListTrackerProjectsStatus `queryParam:"style=form,explode=true,name=status"`
	Customers []string                   `queryParam:"style=form,explode=true,name=customers"`
	Tags      []string                   `queryParam:"style=form,explode=true,name=tags"`
	Sort      []string                   `queryParam:"style=form,explode=true,name=sort"`
}

func (o *ListTrackerProjectsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ListTrackerProjectsRequest) GetPageSize() *float64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListTrackerProjectsRequest) GetQ() *string {
	if o == nil {
		return nil
	}
	return o.Q
}

func (o *ListTrackerProjectsRequest) GetStart() *string {
	if o == nil {
		return nil
	}
	return o.Start
}

func (o *ListTrackerProjectsRequest) GetEnd() *string {
	if o == nil {
		return nil
	}
	return o.End
}

func (o *ListTrackerProjectsRequest) GetStatus() *ListTrackerProjectsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ListTrackerProjectsRequest) GetCustomers() []string {
	if o == nil {
		return nil
	}
	return o.Customers
}

func (o *ListTrackerProjectsRequest) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *ListTrackerProjectsRequest) GetSort() []string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListTrackerProjectsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List all tracker projects for the authenticated team.
	TrackerProjectsResponse *components.TrackerProjectsResponse
}

func (o *ListTrackerProjectsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListTrackerProjectsResponse) GetTrackerProjectsResponse() *components.TrackerProjectsResponse {
	if o == nil {
		return nil
	}
	return o.TrackerProjectsResponse
}

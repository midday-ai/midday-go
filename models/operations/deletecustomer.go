// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/midday-ai/midday-go/models/components"
)

type DeleteCustomerRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *DeleteCustomerRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type DeleteCustomerTag struct {
	// Unique identifier of the tag
	ID string `json:"id"`
	// Display name of the tag
	Name string `json:"name"`
}

func (o *DeleteCustomerTag) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteCustomerTag) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// DeleteCustomerResponseBody - Customer deleted
type DeleteCustomerResponseBody struct {
	// Unique identifier of the customer
	ID string `json:"id"`
	// Name of the customer or organization
	Name string `json:"name"`
	// Primary email address of the customer
	Email string `json:"email"`
	// Billing email address of the customer
	BillingEmail *string `json:"billingEmail"`
	// Primary phone number of the customer
	Phone *string `json:"phone"`
	// Website URL of the customer
	Website *string `json:"website"`
	// Date and time when the customer was created in ISO 8601 format
	CreatedAt string `json:"createdAt"`
	// Country name where the customer is located
	Country *string `json:"country"`
	// First line of the customer's address
	AddressLine1 *string `json:"addressLine1"`
	// Second line of the customer's address (suite, apartment, etc.)
	AddressLine2 *string `json:"addressLine2"`
	// City where the customer is located
	City *string `json:"city"`
	// State or province where the customer is located
	State *string `json:"state"`
	// ZIP or postal code of the customer's address
	Zip *string `json:"zip"`
	// Internal notes about the customer for team reference
	Note *string `json:"note"`
	// VAT (Value Added Tax) number of the customer
	VatNumber *string `json:"vatNumber"`
	// Country code in ISO 3166-1 alpha-2 format
	CountryCode *string `json:"countryCode"`
	// Unique token for the customer (used for internal identification)
	Token string `json:"token"`
	// Primary contact person's name at the customer organization
	Contact *string `json:"contact"`
	// Total number of invoices created for this customer
	InvoiceCount float64 `json:"invoiceCount"`
	// Total number of projects associated with this customer
	ProjectCount float64 `json:"projectCount"`
	// Array of tags associated with the customer for categorization
	Tags []DeleteCustomerTag `json:"tags"`
}

func (o *DeleteCustomerResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteCustomerResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DeleteCustomerResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *DeleteCustomerResponseBody) GetBillingEmail() *string {
	if o == nil {
		return nil
	}
	return o.BillingEmail
}

func (o *DeleteCustomerResponseBody) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *DeleteCustomerResponseBody) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *DeleteCustomerResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *DeleteCustomerResponseBody) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *DeleteCustomerResponseBody) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *DeleteCustomerResponseBody) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *DeleteCustomerResponseBody) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *DeleteCustomerResponseBody) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *DeleteCustomerResponseBody) GetZip() *string {
	if o == nil {
		return nil
	}
	return o.Zip
}

func (o *DeleteCustomerResponseBody) GetNote() *string {
	if o == nil {
		return nil
	}
	return o.Note
}

func (o *DeleteCustomerResponseBody) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *DeleteCustomerResponseBody) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *DeleteCustomerResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *DeleteCustomerResponseBody) GetContact() *string {
	if o == nil {
		return nil
	}
	return o.Contact
}

func (o *DeleteCustomerResponseBody) GetInvoiceCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.InvoiceCount
}

func (o *DeleteCustomerResponseBody) GetProjectCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.ProjectCount
}

func (o *DeleteCustomerResponseBody) GetTags() []DeleteCustomerTag {
	if o == nil {
		return []DeleteCustomerTag{}
	}
	return o.Tags
}

type DeleteCustomerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Customer deleted
	Object *DeleteCustomerResponseBody
}

func (o *DeleteCustomerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteCustomerResponse) GetObject() *DeleteCustomerResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

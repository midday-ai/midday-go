// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TrackerProjectResponseStatus - Current status of the project
type TrackerProjectResponseStatus string

const (
	TrackerProjectResponseStatusInProgress TrackerProjectResponseStatus = "in_progress"
	TrackerProjectResponseStatusCompleted  TrackerProjectResponseStatus = "completed"
)

func (e TrackerProjectResponseStatus) ToPointer() *TrackerProjectResponseStatus {
	return &e
}
func (e *TrackerProjectResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_progress":
		fallthrough
	case "completed":
		*e = TrackerProjectResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrackerProjectResponseStatus: %v", v)
	}
}

// Customer information associated with the project
type Customer struct {
	// Unique identifier of the customer
	ID string `json:"id"`
	// Name of the customer or organization
	Name string `json:"name"`
	// Website URL of the customer
	Website string `json:"website"`
}

func (o *Customer) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Customer) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Customer) GetWebsite() string {
	if o == nil {
		return ""
	}
	return o.Website
}

type TrackerProjectResponseTag struct {
	// Unique identifier of the tag
	ID string `json:"id"`
	// Display name of the tag
	Name string `json:"name"`
}

func (o *TrackerProjectResponseTag) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TrackerProjectResponseTag) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type User struct {
	// Unique identifier of the user
	ID string `json:"id"`
	// Full name of the user
	FullName string `json:"fullName"`
	// URL to the user's avatar image
	AvatarURL string `json:"avatarUrl"`
}

func (o *User) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *User) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *User) GetAvatarURL() string {
	if o == nil {
		return ""
	}
	return o.AvatarURL
}

type TrackerProjectResponse struct {
	// Unique identifier of the project
	ID string `json:"id"`
	// Name of the project
	Name string `json:"name"`
	// Detailed description of the project
	Description *string `json:"description"`
	// Current status of the project
	Status TrackerProjectResponseStatus `json:"status"`
	// Estimated total hours required to complete the project
	Estimate *float64 `json:"estimate"`
	// Currency code for the project rate in ISO 4217 format
	Currency *string `json:"currency"`
	// Date and time when the project was created in ISO 8601 format
	CreatedAt string `json:"createdAt"`
	// Total tracked time for the project in seconds
	TotalDuration *float64 `json:"totalDuration"`
	// Total monetary amount earned from the project
	TotalAmount float64 `json:"totalAmount"`
	// Customer information associated with the project
	Customer *Customer `json:"customer"`
	// Array of tags associated with the project
	Tags []TrackerProjectResponseTag `json:"tags"`
	// Array of users assigned to work on the project
	Users []User `json:"users"`
}

func (o *TrackerProjectResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TrackerProjectResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *TrackerProjectResponse) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *TrackerProjectResponse) GetStatus() TrackerProjectResponseStatus {
	if o == nil {
		return TrackerProjectResponseStatus("")
	}
	return o.Status
}

func (o *TrackerProjectResponse) GetEstimate() *float64 {
	if o == nil {
		return nil
	}
	return o.Estimate
}

func (o *TrackerProjectResponse) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *TrackerProjectResponse) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *TrackerProjectResponse) GetTotalDuration() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalDuration
}

func (o *TrackerProjectResponse) GetTotalAmount() float64 {
	if o == nil {
		return 0.0
	}
	return o.TotalAmount
}

func (o *TrackerProjectResponse) GetCustomer() *Customer {
	if o == nil {
		return nil
	}
	return o.Customer
}

func (o *TrackerProjectResponse) GetTags() []TrackerProjectResponseTag {
	if o == nil {
		return []TrackerProjectResponseTag{}
	}
	return o.Tags
}

func (o *TrackerProjectResponse) GetUsers() []User {
	if o == nil {
		return nil
	}
	return o.Users
}

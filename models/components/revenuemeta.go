// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// RevenueMetaType - Type of metric
type RevenueMetaType string

const (
	RevenueMetaTypeRevenue RevenueMetaType = "revenue"
)

func (e RevenueMetaType) ToPointer() *RevenueMetaType {
	return &e
}
func (e *RevenueMetaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "revenue":
		*e = RevenueMetaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RevenueMetaType: %v", v)
	}
}

type RevenueMeta struct {
	// Type of metric
	Type RevenueMetaType `json:"type"`
	// Currency code (ISO 4217)
	Currency string `json:"currency"`
}

func (o *RevenueMeta) GetType() RevenueMetaType {
	if o == nil {
		return RevenueMetaType("")
	}
	return o.Type
}

func (o *RevenueMeta) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

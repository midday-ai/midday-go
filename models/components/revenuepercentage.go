// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// RevenuePercentageStatus - Status of the change
type RevenuePercentageStatus string

const (
	RevenuePercentageStatusNegative RevenuePercentageStatus = "negative"
	RevenuePercentageStatusPositive RevenuePercentageStatus = "positive"
)

func (e RevenuePercentageStatus) ToPointer() *RevenuePercentageStatus {
	return &e
}
func (e *RevenuePercentageStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "negative":
		fallthrough
	case "positive":
		*e = RevenuePercentageStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RevenuePercentageStatus: %v", v)
	}
}

type RevenuePercentage struct {
	// Percentage change compared to previous period
	Value float64 `json:"value"`
	// Status of the change
	Status RevenuePercentageStatus `json:"status"`
}

func (o *RevenuePercentage) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *RevenuePercentage) GetStatus() RevenuePercentageStatus {
	if o == nil {
		return RevenuePercentageStatus("")
	}
	return o.Status
}

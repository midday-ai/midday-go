// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ExpensesResultArray struct {
	// Date for the expense value
	Date string `json:"date"`
	// Expense value for the given date
	Value float64 `json:"value"`
	// Currency code (ISO 4217)
	Currency string `json:"currency"`
	// Recurring expense value for the given date
	Recurring float64 `json:"recurring"`
	// Total expense for the given date
	Total float64 `json:"total"`
}

func (o *ExpensesResultArray) GetDate() string {
	if o == nil {
		return ""
	}
	return o.Date
}

func (o *ExpensesResultArray) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *ExpensesResultArray) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *ExpensesResultArray) GetRecurring() float64 {
	if o == nil {
		return 0.0
	}
	return o.Recurring
}

func (o *ExpensesResultArray) GetTotal() float64 {
	if o == nil {
		return 0.0
	}
	return o.Total
}

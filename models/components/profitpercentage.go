// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ProfitPercentageStatus - Status of the change
type ProfitPercentageStatus string

const (
	ProfitPercentageStatusNegative ProfitPercentageStatus = "negative"
	ProfitPercentageStatusPositive ProfitPercentageStatus = "positive"
)

func (e ProfitPercentageStatus) ToPointer() *ProfitPercentageStatus {
	return &e
}
func (e *ProfitPercentageStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "negative":
		fallthrough
	case "positive":
		*e = ProfitPercentageStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProfitPercentageStatus: %v", v)
	}
}

type ProfitPercentage struct {
	// Percentage change compared to previous period
	Value float64 `json:"value"`
	// Status of the change
	Status ProfitPercentageStatus `json:"status"`
}

func (o *ProfitPercentage) GetValue() float64 {
	if o == nil {
		return 0.0
	}
	return o.Value
}

func (o *ProfitPercentage) GetStatus() ProfitPercentageStatus {
	if o == nil {
		return ProfitPercentageStatus("")
	}
	return o.Status
}
